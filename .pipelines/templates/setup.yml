jobs:
  - job: setup_workspace
    displayName: Setup Workspace

    variables:
      - template: ./variables.yml

    steps:
      - task: AzureCLI@2
        displayName: Install Azure ML CLI
        inputs:
          scriptType: bash
          azureSubscription: $(service_connection)
          scriptLocation: inlineScript
          inlineScript: az extension add -n azure-cli-ml

      - task: AzureCLI@2
        displayName: Attach Workspace
        inputs:
          scriptType: bash
          azureSubscription: $(service_connection)
          scriptLocation: inlineScript
          inlineScript: |
            az ml folder attach \
            --workspace-name $(ml_workspace_name) \
            --resource-group $(resource_group_name)

      - task: AzureCLI@2
        displayName: Attach AKS Cluster
        inputs:
          scriptType: bash
          azureSubscription: $(service_connection)
          scriptLocation: inlineScript
          inlineScript: |
            export SUBSCRIPTION_ID=$(az account show | jq ".id" --raw-output)

            az ml computetarget attach aks \
            --compute-resource-id /subscriptions/$SUBSCRIPTION_ID/resourcegroups/$(resource_group_name)/providers/Microsoft.ContainerService/managedClusters/$(aks_name) \
            --name $(aks_cluster_name)

      - task: AzureCLI@2
        displayName: Attach AML Compute
        inputs:
          scriptType: bash
          azureSubscription: $(service_connection)
          scriptLocation: inlineScript
          inlineScript: |
            az ml computetarget create amlcompute \
            --name $(compute_cluster_name) \
            --vm-size $(compute_vm_size) \
            --max-nodes $(compute_max_nodes)

      - task: AzureCLI@2
        displayName: Register Tabular Dataset
        inputs:
          scriptType: bash
          azureSubscription: $(service_connection)
          scriptLocation: inlineScript
          inlineScript: |
            az ml dataset register --file $(tabular_dataset_spec_file) --skip-validation

      - task: AzureCLI@2
        displayName: Create Datastores
        inputs:
          scriptType: bash
          azureSubscription: $(service_connection)
          scriptLocation: inlineScript
          inlineScript: |
            set -e

            export SUBSCRIPTION_ID=$(az account show | jq ".id" --raw-output)

            export STORAGE_ACCOUNT_KEY=$(az storage account keys list \
            --resource-group $(resource_group_name) \
            --account-name $(storage_name) | jq ".[0].value" --raw-output)

            az storage container create \
            --name $(input_blob_contianer_name) \
            --account-name $(storage_name) \
            --resource-group $(resource_group_name)

            az storage blob directory create \
            --container-name $(input_blob_contianer_name)
            --directory-path $(input_blob_directory_path)
            --account-name $(storage_name) \
            --account-key $STORAGE_ACCOUNT_KEY \

            az storage container create \
            --name $(output_blob_contianer_name) \
            --account-name $(storage_name) \
            --resource-group $(resource_group_name)

            az ml datastore attach-blob \
            --account-name $(storage_name) \
            --container-name $(input_blob_contianer_name) \
            --name $(input_datastore_name) \
            --storage-account-resource-group $(resource_group_name) \
            --storage-account-subscription-id $SUBSCRIPTION_ID \
            --account-key $STORAGE_ACCOUNT_KEY

            az ml datastore attach-blob \
            --account-name $(storage_name) \
            --container-name $(output_blob_contianer_name)  \
            --name $(output_datastore_name) \
            --storage-account-resource-group $(resource_group_name) \
            --storage-account-subscription-id $SUBSCRIPTION_ID \
            --account-key $STORAGE_ACCOUNT_KEY

      - task: AzureCLI@2
        displayName: Register File Dataset
        inputs:
          scriptType: bash
          azureSubscription: $(service_connection)
          scriptLocation: inlineScript
          inlineScript: |
            az ml dataset register --file $(file_dataset_spec_file) --skip-validation
